// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

::uniffi::setup_scaffolding!("loro");

/// Export info about the UDL while used to create us
/// See `uniffi_bindgen::macro_metadata` for how this is used.

// ditto for info about the UDL which spawned us.

const UNIFFI_META_CONST_UDL_LORO: ::uniffi::MetadataBuffer =
    ::uniffi::MetadataBuffer::from_code(::uniffi::metadata::codes::UDL_FILE)
        .concat_str("loro")
        .concat_str("loro")
        .concat_str("loro");

#[doc(hidden)]
#[no_mangle]
pub static UNIFFI_META_UDL_LORO: [u8; UNIFFI_META_CONST_UDL_LORO.size] =
    UNIFFI_META_CONST_UDL_LORO.into_array();

uniffi::deps::static_assertions::assert_impl_all!(u64: ::std::cmp::Eq, ::std::hash::Hash); // record<u64, r#CounterSpan>

uniffi::deps::static_assertions::assert_impl_all!(u64: ::std::cmp::Eq, ::std::hash::Hash); // record<u64, r#PeerInfo>

uniffi::deps::static_assertions::assert_impl_all!(::std::string::String: ::std::cmp::Eq, ::std::hash::Hash); // record<::std::string::String, r#LoroValue>

uniffi::deps::static_assertions::assert_impl_all!(::std::string::String: ::std::cmp::Eq, ::std::hash::Hash); // record<::std::string::String, ::std::option::Option<::std::sync::Arc<dyn r#ValueOrContainer>>>

// Error definitions, corresponding to `error` in the UDL.

#[::uniffi::udl_derive(Error)]
#[uniffi(flat_error)]

enum r#CannotFindRelativePosition {
    r#ContainerDeleted {},
    r#HistoryCleared {},
    r#IdNotFound {},
}

// Error definitions, corresponding to `error` in the UDL.

#[::uniffi::udl_derive(Error)]
#[uniffi(flat_error)]

enum r#ChangeTravelError {
    r#TargetIdNotFound {},
    r#TargetVersionNotIncluded {},
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#ContainerID {
    r#Root {
        r#name: ::std::string::String,
        r#container_type: r#ContainerType,
    },
    r#Normal {
        r#peer: u64,
        r#counter: i32,
        r#container_type: r#ContainerType,
    },
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#ContainerType {
    r#Text {},
    r#Map {},
    r#List {},
    r#MovableList {},
    r#Tree {},
    r#Counter {},
    r#Unknown { r#kind: u8 },
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#Diff {
    r#List {
        r#diff: std::vec::Vec<r#ListDiffItem>,
    },
    r#Text {
        r#diff: std::vec::Vec<r#TextDelta>,
    },
    r#Map {
        r#diff: r#MapDelta,
    },
    r#Tree {
        r#diff: r#TreeDiff,
    },
    r#Counter {
        r#diff: f64,
    },
    r#Unknown {},
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#EventTriggerKind {
    r#Local {},
    r#Import {},
    r#Checkout {},
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#ExpandType {
    r#Before {},
    r#After {},
    r#Both {},
    r#None {},
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#Index {
    r#Key { r#key: ::std::string::String },
    r#Seq { r#index: u32 },
    r#Node { r#target: r#TreeID },
}

// Error definitions, corresponding to `error` in the UDL.

#[::uniffi::udl_derive(Error)]
#[uniffi(flat_error)]

enum r#JsonPathError {
    r#InvalidJsonPath {},
    r#EvaluationError {},
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#ListDiffItem {
    r#Insert {
        r#insert: std::vec::Vec<::std::sync::Arc<dyn r#ValueOrContainer>>,
        r#is_move: bool,
    },
    r#Delete {
        r#delete: u32,
    },
    r#Retain {
        r#retain: u32,
    },
}

// Error definitions, corresponding to `error` in the UDL.

#[::uniffi::udl_derive(Error)]
#[uniffi(flat_error)]
#[non_exhaustive]
enum r#LoroEncodeError {
    r#FrontiersNotFound {},
    r#ShallowSnapshotIncompatibleWithOldFormat {},
    r#UnknownContainer {},
}

// Error definitions, corresponding to `error` in the UDL.

#[::uniffi::udl_derive(Error)]
#[uniffi(flat_error)]

enum r#LoroError {
    r#UnmatchedContext {},
    r#DecodeVersionVectorError {},
    r#DecodeError {},
    r#DecodeDataCorruptionError {},
    r#DecodeChecksumMismatchError {},
    r#IncompatibleFutureEncodingError {},
    r#JsError {},
    r#LockError {},
    r#DuplicatedTransactionError {},
    r#NotFoundError {},
    r#TransactionError {},
    r#OutOfBound {},
    r#UsedOpID {},
    r#TreeError {},
    r#ArgErr {},
    r#AutoCommitNotStarted {},
    r#StyleConfigMissing {},
    r#Unknown {},
    r#FrontiersNotFound {},
    r#ImportWhenInTxn {},
    r#MisuseDetachedContainer {},
    r#NotImplemented {},
    r#ReattachAttachedContainer {},
    r#EditWhenDetached {},
    r#UndoInvalidIdSpan {},
    r#UndoWithDifferentPeerId {},
    r#InvalidJsonSchema {},
    r#UTF8InUnicodeCodePoint {},
    r#UTF16InUnicodeCodePoint {},
    r#EndIndexLessThanStartIndex {},
    r#InvalidRootContainerName {},
    r#ImportUpdatesThatDependsOnOutdatedVersion {},
    r#SwitchToVersionBeforeShallowRoot {},
    r#ContainerDeleted {},
    r#ConcurrentOpsWithSamePeerID {},
    r#InvalidPeerID {},
    r#ContainersNotFound {},
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#LoroValue {
    r#Null {},
    r#Bool {
        r#value: bool,
    },
    r#Double {
        r#value: f64,
    },
    r#I64 {
        r#value: i64,
    },
    r#Binary {
        r#value: ::std::vec::Vec<u8>,
    },
    r#String {
        r#value: ::std::string::String,
    },
    r#List {
        r#value: std::vec::Vec<r#LoroValue>,
    },
    r#Map {
        r#value: ::std::collections::HashMap<::std::string::String, r#LoroValue>,
    },
    r#Container {
        r#value: r#ContainerID,
    },
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#Ordering {
    r#Less {},
    r#Equal {},
    r#Greater {},
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#Side {
    r#Left {},
    r#Middle {},
    r#Right {},
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#TextDelta {
    r#Retain {
        r#retain: u32,
        r#attributes:
            ::std::option::Option<::std::collections::HashMap<::std::string::String, r#LoroValue>>,
    },
    r#Insert {
        r#insert: ::std::string::String,
        r#attributes:
            ::std::option::Option<::std::collections::HashMap<::std::string::String, r#LoroValue>>,
    },
    r#Delete {
        r#delete: u32,
    },
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#TreeExternalDiff {
    r#Create {
        r#parent: r#TreeParentId,
        r#index: u32,
        r#fractional_index: ::std::string::String,
    },
    r#Move {
        r#parent: r#TreeParentId,
        r#index: u32,
        r#fractional_index: ::std::string::String,
        r#old_parent: r#TreeParentId,
        r#old_index: u32,
    },
    r#Delete {
        r#old_parent: r#TreeParentId,
        r#old_index: u32,
    },
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#TreeParentId {
    r#Node { r#id: r#TreeID },
    r#Root {},
    r#Deleted {},
    r#Unexist {},
}

// Enum definitions, corresponding to `enum` in UDL.

#[::uniffi::udl_derive(Enum)]
enum r#UndoOrRedo {
    r#Undo {},
    r#Redo {},
}

// Error definitions, corresponding to `error` in the UDL.

#[::uniffi::udl_derive(Error)]
#[uniffi(flat_error)]

enum r#UpdateTimeoutError {
    r#Timeout {},
}

// Record definitions, implemented as method-less structs, corresponding to `dictionary` objects.

#[::uniffi::udl_derive(Record)]
struct r#AbsolutePosition {
    r#pos: u32,
    r#side: r#Side,
}

#[::uniffi::udl_derive(Record)]
struct r#AwarenessPeerUpdate {
    r#updated: std::vec::Vec<u64>,
    r#added: std::vec::Vec<u64>,
}

#[::uniffi::udl_derive(Record)]
struct r#ChangeMeta {
    r#lamport: u32,
    r#id: r#ID,
    r#timestamp: i64,
    r#message: ::std::option::Option<::std::string::String>,
    r#deps: ::std::sync::Arc<r#Frontiers>,
    r#len: u32,
}

#[::uniffi::udl_derive(Record)]
struct r#CommitOptions {
    r#origin: ::std::option::Option<::std::string::String>,
    r#immediate_renew: bool,
    r#timestamp: ::std::option::Option<i64>,
    r#commit_msg: ::std::option::Option<::std::string::String>,
}

#[::uniffi::udl_derive(Record)]
struct r#ContainerDiff {
    r#target: r#ContainerID,
    r#path: std::vec::Vec<r#PathItem>,
    r#is_unknown: bool,
    r#diff: r#Diff,
}

#[::uniffi::udl_derive(Record)]
struct r#ContainerIDAndDiff {
    r#cid: r#ContainerID,
    r#diff: r#Diff,
}

#[::uniffi::udl_derive(Record)]
struct r#ContainerPath {
    r#id: r#ContainerID,
    r#path: r#Index,
}

#[::uniffi::udl_derive(Record)]
struct r#CounterSpan {
    r#start: i32,
    r#end: i32,
}

#[::uniffi::udl_derive(Record)]
struct r#CursorWithPos {
    r#cursor: ::std::sync::Arc<r#Cursor>,
    r#pos: r#AbsolutePosition,
}

#[::uniffi::udl_derive(Record)]
struct r#DiffEvent {
    r#triggered_by: r#EventTriggerKind,
    r#origin: ::std::string::String,
    r#current_target: ::std::option::Option<r#ContainerID>,
    r#events: std::vec::Vec<r#ContainerDiff>,
}

#[::uniffi::udl_derive(Record)]
struct r#FrontiersOrID {
    r#frontiers: ::std::option::Option<::std::sync::Arc<r#Frontiers>>,
    r#id: ::std::option::Option<r#ID>,
}

#[::uniffi::udl_derive(Record)]
struct r#ID {
    r#peer: u64,
    r#counter: i32,
}

#[::uniffi::udl_derive(Record)]
struct r#IdLp {
    r#lamport: u32,
    r#peer: u64,
}

#[::uniffi::udl_derive(Record)]
struct r#IdSpan {
    r#peer: u64,
    r#counter: r#CounterSpan,
}

#[::uniffi::udl_derive(Record)]
struct r#ImportBlobMetadata {
    r#partial_start_vv: ::std::sync::Arc<r#VersionVector>,
    r#partial_end_vv: ::std::sync::Arc<r#VersionVector>,
    r#start_timestamp: i64,
    r#start_frontiers: ::std::sync::Arc<r#Frontiers>,
    r#end_timestamp: i64,
    r#change_num: u32,
    r#mode: ::std::string::String,
}

#[::uniffi::udl_derive(Record)]
struct r#ImportStatus {
    r#success: ::std::collections::HashMap<u64, r#CounterSpan>,
    r#pending: ::std::option::Option<::std::collections::HashMap<u64, r#CounterSpan>>,
}

#[::uniffi::udl_derive(Record)]
struct r#MapDelta {
    r#updated: ::std::collections::HashMap<
        ::std::string::String,
        ::std::option::Option<::std::sync::Arc<dyn r#ValueOrContainer>>,
    >,
}

#[::uniffi::udl_derive(Record)]
struct r#PathItem {
    r#container: r#ContainerID,
    r#index: r#Index,
}

#[::uniffi::udl_derive(Record)]
struct r#PeerInfo {
    r#state: r#LoroValue,
    r#counter: i32,
    r#timestamp: i64,
}

#[::uniffi::udl_derive(Record)]
struct r#PosQueryResult {
    r#update: ::std::option::Option<::std::sync::Arc<r#Cursor>>,
    r#current: r#AbsolutePosition,
}

#[::uniffi::udl_derive(Record)]
struct r#StyleConfig {
    r#expand: r#ExpandType,
}

#[::uniffi::udl_derive(Record)]
struct r#TreeDiff {
    r#diff: std::vec::Vec<r#TreeDiffItem>,
}

#[::uniffi::udl_derive(Record)]
struct r#TreeDiffItem {
    r#target: r#TreeID,
    r#action: r#TreeExternalDiff,
}

#[::uniffi::udl_derive(Record)]
struct r#TreeID {
    r#peer: u64,
    r#counter: i32,
}

#[::uniffi::udl_derive(Record)]
struct r#UndoItemMeta {
    r#value: r#LoroValue,
    r#cursors: std::vec::Vec<r#CursorWithPos>,
}

#[::uniffi::udl_derive(Record)]
struct r#UpdateOptions {
    r#timeout_ms: ::std::option::Option<f64>,
    r#use_refined_diff: bool,
}

#[::uniffi::udl_derive(Record)]
struct r#VersionVectorDiff {
    r#retreat: ::std::collections::HashMap<u64, r#CounterSpan>,
    r#forward: ::std::collections::HashMap<u64, r#CounterSpan>,
}

// Top level functions, corresponding to UDL `namespace` functions.

#[::uniffi::export_for_udl]
pub fn r#decode_import_blob_meta(
    r#bytes: &::std::vec::Vec<u8>,
    r#check_checksum: bool,
) -> ::std::result::Result<r#ImportBlobMetadata, r#LoroError> {
    unreachable!()
}

#[::uniffi::export_for_udl]
pub fn r#get_version() -> ::std::string::String {
    unreachable!()
}
// Object definitions, corresponding to UDL `interface` definitions.

#[::uniffi::udl_derive(Object)]
struct r#Awareness {}
#[::uniffi::export_for_udl]
impl r#Awareness {
    #[uniffi::constructor]
    pub fn r#new(r#peer: u64, r#timeout: i64) -> ::std::sync::Arc<r#Awareness> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Awareness {
    pub fn r#apply(&self, r#encoded_peers_info: &::std::vec::Vec<u8>) -> r#AwarenessPeerUpdate {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Awareness {
    pub fn r#encode(&self, r#peers: &std::vec::Vec<u64>) -> ::std::vec::Vec<u8> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Awareness {
    pub fn r#encode_all(&self) -> ::std::vec::Vec<u8> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Awareness {
    pub fn r#get_all_states(&self) -> ::std::collections::HashMap<u64, r#PeerInfo> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Awareness {
    pub fn r#get_local_state(&self) -> ::std::option::Option<r#LoroValue> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Awareness {
    pub fn r#peer(&self) -> u64 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Awareness {
    pub fn r#remove_outdated(&self) -> std::vec::Vec<u64> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Awareness {
    pub fn r#set_local_state(&self, r#value: ::std::sync::Arc<dyn r#LoroValueLike>) {
        unreachable!()
    }
}

#[::uniffi::export_for_udl(with_foreign)]
pub trait r#ChangeAncestorsTraveler {
    fn r#travel(&self, r#change: r#ChangeMeta) -> bool;
}

#[::uniffi::udl_derive(Object)]
struct r#Configure {}
#[::uniffi::export_for_udl]
impl r#Configure {
    pub fn r#fork(&self) -> ::std::sync::Arc<r#Configure> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Configure {
    pub fn r#merge_interval(&self) -> i64 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Configure {
    pub fn r#record_timestamp(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Configure {
    pub fn r#set_merge_interval(&self, r#interval: i64) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Configure {
    pub fn r#set_record_timestamp(&self, r#record: bool) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Configure {
    pub fn r#text_style_config(&self) -> ::std::sync::Arc<r#StyleConfigMap> {
        unreachable!()
    }
}

#[::uniffi::export_for_udl(with_foreign)]
pub trait r#ContainerIdLike {
    fn r#as_container_id(&self, r#ty: r#ContainerType) -> r#ContainerID;
}

#[::uniffi::udl_derive(Object)]
struct r#Cursor {}
#[::uniffi::export_for_udl]
impl r#Cursor {
    #[uniffi::constructor]
    pub fn r#new(
        r#id: ::std::option::Option<r#ID>,
        r#container: r#ContainerID,
        r#side: r#Side,
        r#origin_pos: u32,
    ) -> ::std::sync::Arc<r#Cursor> {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#DiffBatch {}
#[::uniffi::export_for_udl]
impl r#DiffBatch {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#DiffBatch> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#DiffBatch {
    pub fn r#get_diff(&self) -> std::vec::Vec<r#ContainerIDAndDiff> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#DiffBatch {
    pub fn r#push(&self, r#cid: r#ContainerID, r#diff: r#Diff) -> ::std::option::Option<r#Diff> {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#FractionalIndex {}
#[::uniffi::export_for_udl]
impl r#FractionalIndex {
    #[uniffi::constructor]
    pub fn r#from_bytes(r#bytes: ::std::vec::Vec<u8>) -> ::std::sync::Arc<r#FractionalIndex> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#FractionalIndex {
    #[uniffi::constructor]
    pub fn r#from_hex_string(r#str: &::std::string::String) -> ::std::sync::Arc<r#FractionalIndex> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#FractionalIndex {
    pub fn r#to_string(&self) -> ::std::string::String {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#Frontiers {}
#[::uniffi::export_for_udl]
impl r#Frontiers {
    #[uniffi::constructor]
    pub fn r#decode(
        r#bytes: &::std::vec::Vec<u8>,
    ) -> ::std::result::Result<::std::sync::Arc<r#Frontiers>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Frontiers {
    #[uniffi::constructor]
    pub fn r#from_id(r#id: r#ID) -> ::std::sync::Arc<r#Frontiers> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Frontiers {
    #[uniffi::constructor]
    pub fn r#from_ids(r#ids: std::vec::Vec<r#ID>) -> ::std::sync::Arc<r#Frontiers> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Frontiers {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#Frontiers> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Frontiers {
    pub fn r#encode(&self) -> ::std::vec::Vec<u8> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Frontiers {
    pub fn r#eq(&self, r#other: &::std::sync::Arc<r#Frontiers>) -> bool {
        unreachable!()
    }
}

#[::uniffi::export_for_udl(with_foreign)]
pub trait r#LocalUpdateCallback {
    fn r#on_local_update(&self, r#update: ::std::vec::Vec<u8>);
}

#[::uniffi::udl_derive(Object)]
struct r#LoroCounter {}
#[::uniffi::export_for_udl]
impl r#LoroCounter {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#LoroCounter> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroCounter {
    pub fn r#decrement(&self, r#value: f64) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroCounter {
    pub fn r#doc(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroDoc>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroCounter {
    pub fn r#get_attached(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroCounter>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroCounter {
    pub fn r#get_value(&self) -> f64 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroCounter {
    pub fn r#id(&self) -> r#ContainerID {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroCounter {
    pub fn r#increment(&self, r#value: f64) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroCounter {
    pub fn r#is_attached(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroCounter {
    pub fn r#is_deleted(&self) -> bool {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#LoroDoc {}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#LoroDoc> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#apply_diff(
        &self,
        r#diff: &::std::sync::Arc<r#DiffBatch>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#attach(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#check_state_correctness_slow(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#checkout(
        &self,
        r#frontiers: &::std::sync::Arc<r#Frontiers>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#checkout_to_latest(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#clear_next_commit_options(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#cmp_with_frontiers(&self, r#other: &::std::sync::Arc<r#Frontiers>) -> r#Ordering {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#commit(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#commit_with(&self, r#options: r#CommitOptions) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#compact_change_store(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#config(&self) -> ::std::sync::Arc<r#Configure> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#config_default_text_style(&self, r#text_style: ::std::option::Option<r#StyleConfig>) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#config_text_style(&self, r#text_style: ::std::sync::Arc<r#StyleConfigMap>) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#detach(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#diff(
        &self,
        r#a: &::std::sync::Arc<r#Frontiers>,
        r#b: &::std::sync::Arc<r#Frontiers>,
    ) -> ::std::result::Result<::std::sync::Arc<r#DiffBatch>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#export_json_in_id_span(
        &self,
        r#id_span: r#IdSpan,
    ) -> std::vec::Vec<::std::string::String> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#export_json_updates(
        &self,
        r#start_vv: &::std::sync::Arc<r#VersionVector>,
        r#end_vv: &::std::sync::Arc<r#VersionVector>,
    ) -> ::std::string::String {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#export_json_updates_without_peer_compression(
        &self,
        r#start_vv: &::std::sync::Arc<r#VersionVector>,
        r#end_vv: &::std::sync::Arc<r#VersionVector>,
    ) -> ::std::string::String {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#export_shallow_snapshot(
        &self,
        r#frontiers: &::std::sync::Arc<r#Frontiers>,
    ) -> ::std::result::Result<::std::vec::Vec<u8>, r#LoroEncodeError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#export_snapshot(
        &self,
    ) -> ::std::result::Result<::std::vec::Vec<u8>, r#LoroEncodeError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#export_snapshot_at(
        &self,
        r#frontiers: &::std::sync::Arc<r#Frontiers>,
    ) -> ::std::result::Result<::std::vec::Vec<u8>, r#LoroEncodeError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#export_state_only(
        &self,
        r#frontiers: ::std::option::Option<::std::sync::Arc<r#Frontiers>>,
    ) -> ::std::result::Result<::std::vec::Vec<u8>, r#LoroEncodeError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#export_updates(
        &self,
        r#vv: &::std::sync::Arc<r#VersionVector>,
    ) -> ::std::result::Result<::std::vec::Vec<u8>, r#LoroEncodeError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#export_updates_in_range(
        &self,
        r#spans: &std::vec::Vec<r#IdSpan>,
    ) -> ::std::result::Result<::std::vec::Vec<u8>, r#LoroEncodeError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#find_id_spans_between(
        &self,
        r#from: &::std::sync::Arc<r#Frontiers>,
        r#to: &::std::sync::Arc<r#Frontiers>,
    ) -> r#VersionVectorDiff {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#fork(&self) -> ::std::sync::Arc<r#LoroDoc> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#fork_at(
        &self,
        r#frontiers: &::std::sync::Arc<r#Frontiers>,
    ) -> ::std::sync::Arc<r#LoroDoc> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#free_diff_calculator(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#free_history_cache(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#frontiers_to_vv(
        &self,
        r#frontiers: &::std::sync::Arc<r#Frontiers>,
    ) -> ::std::option::Option<::std::sync::Arc<r#VersionVector>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_by_path(
        &self,
        r#path: &std::vec::Vec<r#Index>,
    ) -> ::std::option::Option<::std::sync::Arc<dyn r#ValueOrContainer>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_by_str_path(
        &self,
        r#path: &::std::string::String,
    ) -> ::std::option::Option<::std::sync::Arc<dyn r#ValueOrContainer>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_change(&self, r#id: r#ID) -> ::std::option::Option<r#ChangeMeta> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_changed_containers_in(
        &self,
        r#id: r#ID,
        r#len: u32,
    ) -> std::vec::Vec<r#ContainerID> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_counter(
        &self,
        r#id: ::std::sync::Arc<dyn r#ContainerIdLike>,
    ) -> ::std::sync::Arc<r#LoroCounter> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_cursor_pos(
        &self,
        r#cursor: &::std::sync::Arc<r#Cursor>,
    ) -> ::std::result::Result<r#PosQueryResult, r#CannotFindRelativePosition> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_deep_value(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_deep_value_with_id(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_list(
        &self,
        r#id: ::std::sync::Arc<dyn r#ContainerIdLike>,
    ) -> ::std::sync::Arc<r#LoroList> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_map(
        &self,
        r#id: ::std::sync::Arc<dyn r#ContainerIdLike>,
    ) -> ::std::sync::Arc<r#LoroMap> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_movable_list(
        &self,
        r#id: ::std::sync::Arc<dyn r#ContainerIdLike>,
    ) -> ::std::sync::Arc<r#LoroMovableList> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_path_to_container(
        &self,
        r#id: &r#ContainerID,
    ) -> ::std::option::Option<std::vec::Vec<r#ContainerPath>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_pending_txn_len(&self) -> u32 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_text(
        &self,
        r#id: ::std::sync::Arc<dyn r#ContainerIdLike>,
    ) -> ::std::sync::Arc<r#LoroText> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_tree(
        &self,
        r#id: ::std::sync::Arc<dyn r#ContainerIdLike>,
    ) -> ::std::sync::Arc<r#LoroTree> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#get_value(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#has_container(&self, r#id: &r#ContainerID) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#has_history_cache(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#import(
        &self,
        r#bytes: &::std::vec::Vec<u8>,
    ) -> ::std::result::Result<r#ImportStatus, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#import_batch(
        &self,
        r#bytes: &std::vec::Vec<::std::vec::Vec<u8>>,
    ) -> ::std::result::Result<r#ImportStatus, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#import_json_updates(
        &self,
        r#json: &::std::string::String,
    ) -> ::std::result::Result<r#ImportStatus, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#import_with(
        &self,
        r#bytes: &::std::vec::Vec<u8>,
        r#origin: &::std::string::String,
    ) -> ::std::result::Result<r#ImportStatus, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#is_detached(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#is_shallow(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#jsonpath(
        &self,
        r#path: &::std::string::String,
    ) -> ::std::result::Result<
        std::vec::Vec<::std::sync::Arc<dyn r#ValueOrContainer>>,
        r#JsonPathError,
    > {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#len_changes(&self) -> u64 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#len_ops(&self) -> u64 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#log_estimate_size(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#minimize_frontiers(
        &self,
        r#frontiers: &::std::sync::Arc<r#Frontiers>,
    ) -> r#FrontiersOrID {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#oplog_frontiers(&self) -> ::std::sync::Arc<r#Frontiers> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#oplog_vv(&self) -> ::std::sync::Arc<r#VersionVector> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#peer_id(&self) -> u64 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#revert_to(
        &self,
        r#version: &::std::sync::Arc<r#Frontiers>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#set_change_merge_interval(&self, r#interval: i64) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#set_next_commit_message(&self, r#msg: &::std::string::String) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#set_next_commit_options(&self, r#options: r#CommitOptions) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#set_next_commit_origin(&self, r#origin: &::std::string::String) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#set_next_commit_timestamp(&self, r#timestamp: i64) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#set_peer_id(&self, r#peer: u64) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#set_record_timestamp(&self, r#record: bool) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#shallow_since_vv(&self) -> ::std::sync::Arc<r#VersionVector> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#state_frontiers(&self) -> ::std::sync::Arc<r#Frontiers> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#state_vv(&self) -> ::std::sync::Arc<r#VersionVector> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#subscribe(
        &self,
        r#container_id: &r#ContainerID,
        r#subscriber: ::std::sync::Arc<dyn r#Subscriber>,
    ) -> ::std::sync::Arc<r#Subscription> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#subscribe_local_update(
        &self,
        r#callback: ::std::sync::Arc<dyn r#LocalUpdateCallback>,
    ) -> ::std::sync::Arc<r#Subscription> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#subscribe_root(
        &self,
        r#subscriber: ::std::sync::Arc<dyn r#Subscriber>,
    ) -> ::std::sync::Arc<r#Subscription> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#travel_change_ancestors(
        &self,
        r#ids: &std::vec::Vec<r#ID>,
        r#f: ::std::sync::Arc<dyn r#ChangeAncestorsTraveler>,
    ) -> ::std::result::Result<(), r#ChangeTravelError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroDoc {
    pub fn r#vv_to_frontiers(
        &self,
        r#vv: &::std::sync::Arc<r#VersionVector>,
    ) -> ::std::sync::Arc<r#Frontiers> {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#LoroList {}
#[::uniffi::export_for_udl]
impl r#LoroList {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#LoroList> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#clear(&self) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#delete(&self, r#pos: u32, r#len: u32) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#doc(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroDoc>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#get(
        &self,
        r#index: u32,
    ) -> ::std::option::Option<::std::sync::Arc<dyn r#ValueOrContainer>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#get_attached(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroList>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#get_cursor(
        &self,
        r#pos: u32,
        r#side: r#Side,
    ) -> ::std::option::Option<::std::sync::Arc<r#Cursor>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#get_deep_value(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#get_id_at(&self, r#pos: u32) -> ::std::option::Option<r#ID> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#get_value(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#id(&self) -> r#ContainerID {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#insert(
        &self,
        r#pos: u32,
        r#v: ::std::sync::Arc<dyn r#LoroValueLike>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#insert_counter_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroCounter>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroCounter>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#insert_list_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroList>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroList>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#insert_map_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroMap>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMap>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#insert_movable_list_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroMovableList>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMovableList>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#insert_text_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroText>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroText>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#insert_tree_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroTree>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroTree>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#is_attached(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#is_deleted(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#is_empty(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#len(&self) -> u32 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#pop(&self) -> ::std::result::Result<::std::option::Option<r#LoroValue>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#push(
        &self,
        r#v: ::std::sync::Arc<dyn r#LoroValueLike>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroList {
    pub fn r#to_vec(&self) -> std::vec::Vec<r#LoroValue> {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#LoroMap {}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#LoroMap> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#clear(&self) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#delete(
        &self,
        r#key: &::std::string::String,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#doc(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroDoc>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get(
        &self,
        r#key: &::std::string::String,
    ) -> ::std::option::Option<::std::sync::Arc<dyn r#ValueOrContainer>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get_attached(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroMap>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get_deep_value(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get_last_editor(&self, r#key: &::std::string::String) -> ::std::option::Option<u64> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get_or_create_counter_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroCounter>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroCounter>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get_or_create_list_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroList>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroList>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get_or_create_map_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroMap>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMap>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get_or_create_movable_list_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroMovableList>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMovableList>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get_or_create_text_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroText>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroText>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get_or_create_tree_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroTree>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroTree>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#get_value(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#id(&self) -> r#ContainerID {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#insert(
        &self,
        r#key: &::std::string::String,
        r#v: ::std::sync::Arc<dyn r#LoroValueLike>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#insert_counter_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroCounter>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroCounter>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#insert_list_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroList>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroList>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#insert_map_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroMap>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMap>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#insert_movable_list_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroMovableList>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMovableList>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#insert_text_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroText>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroText>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#insert_tree_container(
        &self,
        r#key: &::std::string::String,
        r#child: ::std::sync::Arc<r#LoroTree>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroTree>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#is_attached(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#is_deleted(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#is_empty(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#keys(&self) -> std::vec::Vec<::std::string::String> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#len(&self) -> u32 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMap {
    pub fn r#values(&self) -> std::vec::Vec<::std::sync::Arc<dyn r#ValueOrContainer>> {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#LoroMovableList {}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#LoroMovableList> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#clear(&self) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#delete(&self, r#pos: u32, r#len: u32) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#doc(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroDoc>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#get(
        &self,
        r#index: u32,
    ) -> ::std::option::Option<::std::sync::Arc<dyn r#ValueOrContainer>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#get_attached(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroMovableList>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#get_creator_at(&self, r#pos: u32) -> ::std::option::Option<u64> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#get_cursor(
        &self,
        r#pos: u32,
        r#side: r#Side,
    ) -> ::std::option::Option<::std::sync::Arc<r#Cursor>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#get_deep_value(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#get_last_editor_at(&self, r#pos: u32) -> ::std::option::Option<u64> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#get_last_mover_at(&self, r#pos: u32) -> ::std::option::Option<u64> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#get_value(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#id(&self) -> r#ContainerID {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#insert(
        &self,
        r#pos: u32,
        r#v: ::std::sync::Arc<dyn r#LoroValueLike>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#insert_counter_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroCounter>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroCounter>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#insert_list_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroList>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroList>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#insert_map_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroMap>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMap>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#insert_movable_list_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroMovableList>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMovableList>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#insert_text_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroText>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroText>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#insert_tree_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroTree>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroTree>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#is_attached(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#is_deleted(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#is_empty(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#len(&self) -> u32 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#mov(&self, r#from: u32, r#to: u32) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#pop(
        &self,
    ) -> ::std::result::Result<
        ::std::option::Option<::std::sync::Arc<dyn r#ValueOrContainer>>,
        r#LoroError,
    > {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#push(
        &self,
        r#v: ::std::sync::Arc<dyn r#LoroValueLike>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#set(
        &self,
        r#pos: u32,
        r#value: ::std::sync::Arc<dyn r#LoroValueLike>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#set_counter_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroCounter>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroCounter>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#set_list_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroList>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroList>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#set_map_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroMap>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMap>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#set_movable_list_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroMovableList>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMovableList>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#set_text_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroText>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroText>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#set_tree_container(
        &self,
        r#pos: u32,
        r#child: ::std::sync::Arc<r#LoroTree>,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroTree>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroMovableList {
    pub fn r#to_vec(&self) -> std::vec::Vec<r#LoroValue> {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#LoroText {}
#[::uniffi::export_for_udl]
impl r#LoroText {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#LoroText> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#apply_delta(
        &self,
        r#delta: std::vec::Vec<r#TextDelta>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#delete(&self, r#pos: u32, r#len: u32) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#delete_utf8(&self, r#pos: u32, r#len: u32) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#doc(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroDoc>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#get_attached(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroText>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#get_cursor(
        &self,
        r#pos: u32,
        r#side: r#Side,
    ) -> ::std::option::Option<::std::sync::Arc<r#Cursor>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#get_editor_at_unicode_pos(&self, r#pos: u32) -> ::std::option::Option<u64> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#get_richtext_value(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#id(&self) -> r#ContainerID {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#insert(
        &self,
        r#pos: u32,
        r#s: &::std::string::String,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#insert_utf8(
        &self,
        r#pos: u32,
        r#s: &::std::string::String,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#is_attached(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#is_deleted(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#is_empty(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#len_unicode(&self) -> u32 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#len_utf16(&self) -> u32 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#len_utf8(&self) -> u32 {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#mark(
        &self,
        r#from: u32,
        r#to: u32,
        r#key: &::std::string::String,
        r#value: ::std::sync::Arc<dyn r#LoroValueLike>,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#push_str(
        &self,
        r#s: &::std::string::String,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#slice(
        &self,
        r#start_index: u32,
        r#end_index: u32,
    ) -> ::std::result::Result<::std::string::String, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#splice(
        &self,
        r#pos: u32,
        r#len: u32,
        r#s: &::std::string::String,
    ) -> ::std::result::Result<::std::string::String, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#to_delta(&self) -> std::vec::Vec<r#TextDelta> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#to_string(&self) -> ::std::string::String {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#unmark(
        &self,
        r#from: u32,
        r#to: u32,
        r#key: &::std::string::String,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#update(
        &self,
        r#s: &::std::string::String,
        r#options: r#UpdateOptions,
    ) -> ::std::result::Result<(), r#UpdateTimeoutError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroText {
    pub fn r#update_by_line(
        &self,
        r#s: &::std::string::String,
        r#options: r#UpdateOptions,
    ) -> ::std::result::Result<(), r#UpdateTimeoutError> {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#LoroTree {}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#LoroTree> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#children(
        &self,
        r#parent: r#TreeParentId,
    ) -> ::std::option::Option<std::vec::Vec<r#TreeID>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#children_num(&self, r#parent: r#TreeParentId) -> ::std::option::Option<u32> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#contains(&self, r#target: r#TreeID) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#create(
        &self,
        r#parent: r#TreeParentId,
    ) -> ::std::result::Result<r#TreeID, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#create_at(
        &self,
        r#parent: r#TreeParentId,
        r#index: u32,
    ) -> ::std::result::Result<r#TreeID, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#delete(&self, r#target: r#TreeID) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#disable_fractional_index(&self) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#doc(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroDoc>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#enable_fractional_index(&self, r#jitter: u8) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#fractional_index(
        &self,
        r#target: r#TreeID,
    ) -> ::std::option::Option<::std::string::String> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#get_attached(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroTree>> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#get_last_move_id(&self, r#target: &r#TreeID) -> ::std::option::Option<r#ID> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#get_meta(
        &self,
        r#target: r#TreeID,
    ) -> ::std::result::Result<::std::sync::Arc<r#LoroMap>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#get_value(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#get_value_with_meta(&self) -> r#LoroValue {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#id(&self) -> r#ContainerID {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#is_attached(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#is_deleted(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#is_fractional_index_enabled(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#is_node_deleted(
        &self,
        r#target: r#TreeID,
    ) -> ::std::result::Result<bool, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#mov(
        &self,
        r#target: r#TreeID,
        r#parent: r#TreeParentId,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#mov_after(
        &self,
        r#target: r#TreeID,
        r#after: r#TreeID,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#mov_before(
        &self,
        r#target: r#TreeID,
        r#before: r#TreeID,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#mov_to(
        &self,
        r#target: r#TreeID,
        r#parent: r#TreeParentId,
        r#to: u32,
    ) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#nodes(&self) -> std::vec::Vec<r#TreeID> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#parent(
        &self,
        r#target: r#TreeID,
    ) -> ::std::result::Result<r#TreeParentId, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#LoroTree {
    pub fn r#roots(&self) -> std::vec::Vec<r#TreeID> {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#LoroUnknown {}
#[::uniffi::export_for_udl]
impl r#LoroUnknown {
    pub fn r#id(&self) -> r#ContainerID {
        unreachable!()
    }
}

#[::uniffi::export_for_udl(with_foreign)]
pub trait r#LoroValueLike {
    fn r#as_loro_value(&self) -> r#LoroValue;
}

#[::uniffi::export_for_udl(with_foreign)]
pub trait r#OnPop {
    fn r#on_pop(
        &self,
        r#undo_or_redo: r#UndoOrRedo,
        r#span: r#CounterSpan,
        r#undo_meta: r#UndoItemMeta,
    );
}

#[::uniffi::export_for_udl(with_foreign)]
pub trait r#OnPush {
    fn r#on_push(
        &self,
        r#undo_or_redo: r#UndoOrRedo,
        r#span: r#CounterSpan,
        r#diff_event: ::std::option::Option<r#DiffEvent>,
    ) -> r#UndoItemMeta;
}

#[::uniffi::udl_derive(Object)]
struct r#StyleConfigMap {}
#[::uniffi::export_for_udl]
impl r#StyleConfigMap {
    #[uniffi::constructor]
    pub fn r#default_rich_text_config() -> ::std::sync::Arc<r#StyleConfigMap> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#StyleConfigMap {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#StyleConfigMap> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#StyleConfigMap {
    pub fn r#get(&self, r#key: &::std::string::String) -> ::std::option::Option<r#StyleConfig> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#StyleConfigMap {
    pub fn r#insert(&self, r#key: &::std::string::String, r#value: r#StyleConfig) {
        unreachable!()
    }
}

#[::uniffi::export_for_udl(with_foreign)]
pub trait r#Subscriber {
    fn r#on_diff(&self, r#diff: r#DiffEvent);
}

#[::uniffi::udl_derive(Object)]
struct r#Subscription {}
#[::uniffi::export_for_udl]
impl r#Subscription {
    pub fn r#detach(self: Arc<Self>) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#Subscription {
    pub fn r#unsubscribe(self: Arc<Self>) {
        unreachable!()
    }
}

#[::uniffi::udl_derive(Object)]
struct r#UndoManager {}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    #[uniffi::constructor]
    pub fn r#new(r#doc: &::std::sync::Arc<r#LoroDoc>) -> ::std::sync::Arc<r#UndoManager> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    pub fn r#add_exclude_origin_prefix(&self, r#prefix: &::std::string::String) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    pub fn r#can_redo(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    pub fn r#can_undo(&self) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    pub fn r#record_new_checkpoint(&self) -> ::std::result::Result<(), r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    pub fn r#redo(&self) -> ::std::result::Result<bool, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    pub fn r#set_max_undo_steps(&self, r#size: u32) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    pub fn r#set_merge_interval(&self, r#interval: i64) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    pub fn r#set_on_pop(&self, r#on_pop: ::std::option::Option<::std::sync::Arc<dyn r#OnPop>>) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    pub fn r#set_on_push(&self, r#on_push: ::std::option::Option<::std::sync::Arc<dyn r#OnPush>>) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#UndoManager {
    pub fn r#undo(&self) -> ::std::result::Result<bool, r#LoroError> {
        unreachable!()
    }
}

#[::uniffi::export_for_udl(with_foreign)]
pub trait r#Unsubscriber {
    fn r#on_unsubscribe(&self);
}

#[::uniffi::export_for_udl]
pub trait r#ValueOrContainer {
    fn r#as_container(&self) -> ::std::option::Option<r#ContainerID>;

    fn r#as_loro_counter(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroCounter>>;

    fn r#as_loro_list(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroList>>;

    fn r#as_loro_map(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroMap>>;

    fn r#as_loro_movable_list(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroMovableList>>;

    fn r#as_loro_text(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroText>>;

    fn r#as_loro_tree(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroTree>>;

    fn r#as_loro_unknown(&self) -> ::std::option::Option<::std::sync::Arc<r#LoroUnknown>>;

    fn r#as_value(&self) -> ::std::option::Option<r#LoroValue>;

    fn r#container_type(&self) -> ::std::option::Option<r#ContainerType>;

    fn r#is_container(&self) -> bool;

    fn r#is_value(&self) -> bool;
}

#[::uniffi::udl_derive(Object)]
struct r#VersionVector {}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    #[uniffi::constructor]
    pub fn r#decode(
        r#bytes: &::std::vec::Vec<u8>,
    ) -> ::std::result::Result<::std::sync::Arc<r#VersionVector>, r#LoroError> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    #[uniffi::constructor]
    pub fn r#new() -> ::std::sync::Arc<r#VersionVector> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#diff(&self, r#rhs: &::std::sync::Arc<r#VersionVector>) -> r#VersionVectorDiff {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#encode(&self) -> ::std::vec::Vec<u8> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#eq(&self, r#other: &::std::sync::Arc<r#VersionVector>) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#extend_to_include_vv(&self, r#other: &::std::sync::Arc<r#VersionVector>) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#get_last(&self, r#peer: u64) -> ::std::option::Option<i32> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#get_missing_span(
        &self,
        r#target: &::std::sync::Arc<r#VersionVector>,
    ) -> std::vec::Vec<r#IdSpan> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#includes_id(&self, r#id: r#ID) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#includes_vv(&self, r#other: &::std::sync::Arc<r#VersionVector>) -> bool {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#intersect_span(&self, r#target: r#IdSpan) -> ::std::option::Option<r#CounterSpan> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#merge(&self, r#other: &::std::sync::Arc<r#VersionVector>) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#partial_cmp(
        &self,
        r#other: &::std::sync::Arc<r#VersionVector>,
    ) -> ::std::option::Option<r#Ordering> {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#set_end(&self, r#id: r#ID) {
        unreachable!()
    }
}
#[::uniffi::export_for_udl]
impl r#VersionVector {
    pub fn r#set_last(&self, r#id: r#ID) {
        unreachable!()
    }
}

// Callback Interface definitions, corresponding to UDL `callback interface` definitions.

// External and Wrapped types
// Support for external types.

// Types with an external `FfiConverter`...

// We generate support for each Custom Type and the builtin type it uses.

// Export scaffolding checksums for UDL items

#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_func_decode_import_blob_meta() -> u16 {
    2769
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_func_get_version() -> u16 {
    3250
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_awareness_apply() -> u16 {
    41900
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_awareness_encode() -> u16 {
    37443
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_awareness_encode_all() -> u16 {
    38982
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_awareness_get_all_states() -> u16 {
    30017
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_awareness_get_local_state() -> u16 {
    59706
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_awareness_peer() -> u16 {
    10202
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_awareness_remove_outdated() -> u16 {
    1483
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_awareness_set_local_state() -> u16 {
    517
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_changeancestorstraveler_travel() -> u16 {
    17239
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_configure_fork() -> u16 {
    57176
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_configure_merge_interval() -> u16 {
    43546
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_configure_record_timestamp() -> u16 {
    41033
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_configure_set_merge_interval() -> u16 {
    4893
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_configure_set_record_timestamp() -> u16 {
    30145
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_configure_text_style_config() -> u16 {
    50151
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_containeridlike_as_container_id() -> u16 {
    41081
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_diffbatch_get_diff() -> u16 {
    42707
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_diffbatch_push() -> u16 {
    56678
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_fractionalindex_to_string() -> u16 {
    57024
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_frontiers_encode() -> u16 {
    48230
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_frontiers_eq() -> u16 {
    20207
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_localupdatecallback_on_local_update() -> u16 {
    21789
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorocounter_decrement() -> u16 {
    53919
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorocounter_doc() -> u16 {
    54846
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorocounter_get_attached() -> u16 {
    22021
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorocounter_get_value() -> u16 {
    44616
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorocounter_id() -> u16 {
    31148
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorocounter_increment() -> u16 {
    47367
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorocounter_is_attached() -> u16 {
    51768
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorocounter_is_deleted() -> u16 {
    12079
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_apply_diff() -> u16 {
    45393
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_attach() -> u16 {
    7252
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_check_state_correctness_slow() -> u16 {
    43878
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_checkout() -> u16 {
    415
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_checkout_to_latest() -> u16 {
    2349
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_clear_next_commit_options() -> u16 {
    45217
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_cmp_with_frontiers() -> u16 {
    31942
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_commit() -> u16 {
    53174
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_commit_with() -> u16 {
    29999
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_compact_change_store() -> u16 {
    26224
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_config() -> u16 {
    3400
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_config_default_text_style() -> u16 {
    15083
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_config_text_style() -> u16 {
    52393
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_detach() -> u16 {
    61399
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_diff() -> u16 {
    38416
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_export_json_in_id_span() -> u16 {
    26608
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_export_json_updates() -> u16 {
    15152
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_export_json_updates_without_peer_compression(
) -> u16 {
    23184
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_export_shallow_snapshot() -> u16 {
    27927
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_export_snapshot() -> u16 {
    61274
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_export_snapshot_at() -> u16 {
    64602
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_export_state_only() -> u16 {
    16747
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_export_updates() -> u16 {
    57637
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_export_updates_in_range() -> u16 {
    22491
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_find_id_spans_between() -> u16 {
    1313
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_fork() -> u16 {
    45665
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_fork_at() -> u16 {
    40377
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_free_diff_calculator() -> u16 {
    32937
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_free_history_cache() -> u16 {
    22144
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_frontiers_to_vv() -> u16 {
    11123
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_by_path() -> u16 {
    35945
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_by_str_path() -> u16 {
    6739
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_change() -> u16 {
    17896
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_changed_containers_in() -> u16 {
    52454
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_counter() -> u16 {
    12597
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_cursor_pos() -> u16 {
    30480
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_deep_value() -> u16 {
    3404
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_deep_value_with_id() -> u16 {
    49124
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_list() -> u16 {
    9609
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_map() -> u16 {
    63137
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_movable_list() -> u16 {
    7302
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_path_to_container() -> u16 {
    62623
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_pending_txn_len() -> u16 {
    15050
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_text() -> u16 {
    56069
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_tree() -> u16 {
    54189
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_get_value() -> u16 {
    29857
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_has_container() -> u16 {
    41856
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_has_history_cache() -> u16 {
    53741
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_import() -> u16 {
    11528
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_import_batch() -> u16 {
    34010
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_import_json_updates() -> u16 {
    57379
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_import_with() -> u16 {
    12897
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_is_detached() -> u16 {
    30909
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_is_shallow() -> u16 {
    53044
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_jsonpath() -> u16 {
    15996
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_len_changes() -> u16 {
    62401
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_len_ops() -> u16 {
    11644
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_log_estimate_size() -> u16 {
    19429
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_minimize_frontiers() -> u16 {
    39579
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_oplog_frontiers() -> u16 {
    49043
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_oplog_vv() -> u16 {
    56754
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_peer_id() -> u16 {
    35449
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_revert_to() -> u16 {
    48346
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_set_change_merge_interval() -> u16 {
    55133
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_set_next_commit_message() -> u16 {
    18940
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_set_next_commit_options() -> u16 {
    13250
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_set_next_commit_origin() -> u16 {
    27549
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_set_next_commit_timestamp() -> u16 {
    30492
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_set_peer_id() -> u16 {
    29379
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_set_record_timestamp() -> u16 {
    15945
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_shallow_since_vv() -> u16 {
    13449
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_state_frontiers() -> u16 {
    17079
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_state_vv() -> u16 {
    1627
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_subscribe() -> u16 {
    7981
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_subscribe_local_update() -> u16 {
    58652
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_subscribe_root() -> u16 {
    16564
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_travel_change_ancestors() -> u16 {
    39918
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorodoc_vv_to_frontiers() -> u16 {
    47960
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_clear() -> u16 {
    61243
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_delete() -> u16 {
    40414
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_doc() -> u16 {
    4182
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_get() -> u16 {
    36174
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_get_attached() -> u16 {
    5208
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_get_cursor() -> u16 {
    42636
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_get_deep_value() -> u16 {
    9355
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_get_id_at() -> u16 {
    63640
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_get_value() -> u16 {
    14384
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_id() -> u16 {
    33887
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_insert() -> u16 {
    19544
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_insert_counter_container() -> u16 {
    41569
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_insert_list_container() -> u16 {
    42165
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_insert_map_container() -> u16 {
    25622
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_insert_movable_list_container() -> u16 {
    23559
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_insert_text_container() -> u16 {
    26631
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_insert_tree_container() -> u16 {
    15665
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_is_attached() -> u16 {
    60548
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_is_deleted() -> u16 {
    44383
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_is_empty() -> u16 {
    13469
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_len() -> u16 {
    22800
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_pop() -> u16 {
    20748
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_push() -> u16 {
    32091
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorolist_to_vec() -> u16 {
    34199
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_clear() -> u16 {
    22445
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_delete() -> u16 {
    54675
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_doc() -> u16 {
    4684
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get() -> u16 {
    57695
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get_attached() -> u16 {
    22266
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get_deep_value() -> u16 {
    23748
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get_last_editor() -> u16 {
    54864
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get_or_create_counter_container() -> u16 {
    34280
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get_or_create_list_container() -> u16 {
    51559
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get_or_create_map_container() -> u16 {
    8592
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get_or_create_movable_list_container() -> u16
{
    15746
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get_or_create_text_container() -> u16 {
    13374
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get_or_create_tree_container() -> u16 {
    4760
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_get_value() -> u16 {
    7268
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_id() -> u16 {
    65486
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_insert() -> u16 {
    748
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_insert_counter_container() -> u16 {
    5567
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_insert_list_container() -> u16 {
    52804
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_insert_map_container() -> u16 {
    36523
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_insert_movable_list_container() -> u16 {
    21076
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_insert_text_container() -> u16 {
    50348
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_insert_tree_container() -> u16 {
    59771
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_is_attached() -> u16 {
    6283
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_is_deleted() -> u16 {
    20980
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_is_empty() -> u16 {
    38768
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_keys() -> u16 {
    11621
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_len() -> u16 {
    38088
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromap_values() -> u16 {
    46629
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_clear() -> u16 {
    17252
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_delete() -> u16 {
    51786
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_doc() -> u16 {
    13729
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_get() -> u16 {
    10599
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_get_attached() -> u16 {
    53503
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_get_creator_at() -> u16 {
    21542
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_get_cursor() -> u16 {
    118
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_get_deep_value() -> u16 {
    18542
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_get_last_editor_at() -> u16 {
    8998
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_get_last_mover_at() -> u16 {
    26603
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_get_value() -> u16 {
    50843
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_id() -> u16 {
    9803
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_insert() -> u16 {
    28537
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_insert_counter_container() -> u16 {
    56222
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_insert_list_container() -> u16 {
    47190
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_insert_map_container() -> u16 {
    57810
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_insert_movable_list_container(
) -> u16 {
    6019
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_insert_text_container() -> u16 {
    48945
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_insert_tree_container() -> u16 {
    33670
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_is_attached() -> u16 {
    50724
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_is_deleted() -> u16 {
    37438
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_is_empty() -> u16 {
    44651
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_len() -> u16 {
    28945
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_mov() -> u16 {
    8301
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_pop() -> u16 {
    52086
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_push() -> u16 {
    2828
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_set() -> u16 {
    27054
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_set_counter_container() -> u16 {
    1414
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_set_list_container() -> u16 {
    20393
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_set_map_container() -> u16 {
    20297
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_set_movable_list_container() -> u16
{
    52254
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_set_text_container() -> u16 {
    31935
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_set_tree_container() -> u16 {
    8298
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_loromovablelist_to_vec() -> u16 {
    28826
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_apply_delta() -> u16 {
    32084
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_delete() -> u16 {
    47933
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_delete_utf8() -> u16 {
    44384
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_doc() -> u16 {
    41195
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_get_attached() -> u16 {
    16919
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_get_cursor() -> u16 {
    57876
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_get_editor_at_unicode_pos() -> u16 {
    24596
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_get_richtext_value() -> u16 {
    45999
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_id() -> u16 {
    30925
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_insert() -> u16 {
    10847
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_insert_utf8() -> u16 {
    8484
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_is_attached() -> u16 {
    45378
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_is_deleted() -> u16 {
    31871
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_is_empty() -> u16 {
    7961
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_len_unicode() -> u16 {
    46650
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_len_utf16() -> u16 {
    18865
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_len_utf8() -> u16 {
    29025
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_mark() -> u16 {
    42690
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_push_str() -> u16 {
    2374
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_slice() -> u16 {
    43152
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_splice() -> u16 {
    30467
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_to_delta() -> u16 {
    15868
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_to_string() -> u16 {
    63765
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_unmark() -> u16 {
    14351
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_update() -> u16 {
    16538
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotext_update_by_line() -> u16 {
    29301
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_children() -> u16 {
    4750
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_children_num() -> u16 {
    50997
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_contains() -> u16 {
    62174
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_create() -> u16 {
    55490
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_create_at() -> u16 {
    64751
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_delete() -> u16 {
    36355
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_disable_fractional_index() -> u16 {
    52853
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_doc() -> u16 {
    23287
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_enable_fractional_index() -> u16 {
    39633
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_fractional_index() -> u16 {
    51036
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_get_attached() -> u16 {
    57142
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_get_last_move_id() -> u16 {
    12557
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_get_meta() -> u16 {
    3068
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_get_value() -> u16 {
    44704
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_get_value_with_meta() -> u16 {
    7497
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_id() -> u16 {
    4862
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_is_attached() -> u16 {
    37303
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_is_deleted() -> u16 {
    8644
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_is_fractional_index_enabled() -> u16 {
    19364
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_is_node_deleted() -> u16 {
    7339
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_mov() -> u16 {
    33288
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_mov_after() -> u16 {
    48871
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_mov_before() -> u16 {
    39654
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_mov_to() -> u16 {
    21629
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_nodes() -> u16 {
    31738
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_parent() -> u16 {
    6903
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorotree_roots() -> u16 {
    60881
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorounknown_id() -> u16 {
    65156
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_lorovaluelike_as_loro_value() -> u16 {
    23668
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_onpop_on_pop() -> u16 {
    39438
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_onpush_on_push() -> u16 {
    46111
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_styleconfigmap_get() -> u16 {
    25442
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_styleconfigmap_insert() -> u16 {
    49128
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_subscriber_on_diff() -> u16 {
    462
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_subscription_detach() -> u16 {
    64699
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_subscription_unsubscribe() -> u16 {
    24473
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_undomanager_add_exclude_origin_prefix() -> u16 {
    61306
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_undomanager_can_redo() -> u16 {
    61543
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_undomanager_can_undo() -> u16 {
    51532
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_undomanager_record_new_checkpoint() -> u16 {
    28438
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_undomanager_redo() -> u16 {
    54874
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_undomanager_set_max_undo_steps() -> u16 {
    43243
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_undomanager_set_merge_interval() -> u16 {
    13688
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_undomanager_set_on_pop() -> u16 {
    4141
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_undomanager_set_on_push() -> u16 {
    31009
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_undomanager_undo() -> u16 {
    14430
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_unsubscriber_on_unsubscribe() -> u16 {
    17877
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_as_container() -> u16 {
    61163
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_as_loro_counter() -> u16 {
    51072
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_as_loro_list() -> u16 {
    16144
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_as_loro_map() -> u16 {
    62391
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_as_loro_movable_list() -> u16 {
    49359
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_as_loro_text() -> u16 {
    8015
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_as_loro_tree() -> u16 {
    39545
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_as_loro_unknown() -> u16 {
    9911
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_as_value() -> u16 {
    9638
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_container_type() -> u16 {
    56498
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_is_container() -> u16 {
    16329
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_valueorcontainer_is_value() -> u16 {
    13911
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_diff() -> u16 {
    29529
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_encode() -> u16 {
    64665
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_eq() -> u16 {
    30406
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_extend_to_include_vv() -> u16 {
    28076
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_get_last() -> u16 {
    45434
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_get_missing_span() -> u16 {
    2797
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_includes_id() -> u16 {
    50408
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_includes_vv() -> u16 {
    23089
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_intersect_span() -> u16 {
    54748
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_merge() -> u16 {
    23694
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_partial_cmp() -> u16 {
    27570
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_set_end() -> u16 {
    27313
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_method_versionvector_set_last() -> u16 {
    40968
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_awareness_new() -> u16 {
    33037
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_cursor_new() -> u16 {
    11721
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_diffbatch_new() -> u16 {
    62583
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_fractionalindex_from_bytes() -> u16 {
    35415
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_fractionalindex_from_hex_string() -> u16 {
    10737
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_frontiers_decode() -> u16 {
    27043
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_frontiers_from_id() -> u16 {
    60928
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_frontiers_from_ids() -> u16 {
    61832
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_frontiers_new() -> u16 {
    5172
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_lorocounter_new() -> u16 {
    44867
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_lorodoc_new() -> u16 {
    54129
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_lorolist_new() -> u16 {
    2861
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_loromap_new() -> u16 {
    63806
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_loromovablelist_new() -> u16 {
    32944
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_lorotext_new() -> u16 {
    33191
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_lorotree_new() -> u16 {
    42150
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_styleconfigmap_default_rich_text_config() -> u16
{
    46944
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_styleconfigmap_new() -> u16 {
    23831
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_undomanager_new() -> u16 {
    35328
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_versionvector_decode() -> u16 {
    19639
}
#[no_mangle]
#[doc(hidden)]
pub extern "C" fn r#uniffi_loro_checksum_constructor_versionvector_new() -> u16 {
    31126
}
